name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Run tests with coverage
      run: npm test -- --coverage --passWithNoTests
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/coverage-final.json
        fail_ci_if_error: false
    
    - name: Build project
      run: npm run build
    
    - name: Check bundle size
      run: |
        echo "Bundle size analysis:"
        ls -lah .next/static/chunks/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=high
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      if: github.event_name == 'pull_request'
      with:
        path: ./
        base: ${{ github.event.pull_request.base.sha }}
        head: ${{ github.event.pull_request.head.sha }}
        
    - name: Check for secrets (push)
      uses: trufflesecurity/trufflehog@main
      if: github.event_name == 'push'
      with:
        path: ./
        base: ${{ github.event.before }}
        head: ${{ github.event.after }}

  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Start server
      run: |
        npm run start &
        npx wait-on http://localhost:3000 --timeout 30000
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:3000
          http://localhost:3000/profile
        uploadArtifacts: false
        temporaryPublicStorage: false